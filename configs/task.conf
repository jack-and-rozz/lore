include "dataset.conf"
include "enc_dec.conf"

#################################
#    Task Dependent Settings
#################################

seq2seq_base {
  loss_weight = 1.0
  use_shared_encoder = True
  encoder = ${encoder}
  decoder = ${attn_decoder}
}

dialogue = ${seq2seq_base}{
  model_type = CrossLingualResponseGeneration
  num_ffnn_layers = { # The depth of intermediate layers between encoder and decoder, defined by lang and task.
    task = 2
    lang = 1
  }
}

autoencoder = ${seq2seq_base}{
  model_type = CrossLingualAutoEncoder
  num_ffnn_layers = {
    task = 0
    lang = ${dialogue.num_ffnn_layers.lang}
  }
}
untrans = ${seq2seq_base}{
  model_type=UnsupervisedTranslation
  num_ffnn_layers = {
    task = 0
    lang = ${dialogue.num_ffnn_layers.lang}
  }
}


# Subclasses depending on the language.

############################
##      Dialogue
############################

dialogue_en = ${dialogue}{
  lang = {
    src = en
    trg = en
  }
  dataset=${opensubtitles_pairwise_en_dial}
}
dialogue_ja = ${dialogue}{
  lang = {
    src = ja
    trg = ja
  }
  dataset=${opensubtitles_pairwise_ja_dial}
}

dialogue_ja_test = ${dialogue}{
  lang = {
    src = ja
    trg = ja
  }
  model_type=CrossLingualResponseGenerationTest
  dataset=${opensubtitles_pairwise_ja_dial_test}
}

#####################################
##   Unsupervised Translation
#####################################

untrans_en2ja = ${untrans}{
  lang = {
    src = en
    trg = ja
  }
  # TODO: setup dataset 
  dataset = ${opensubtitles_untrans_en2ja}
}


#####################################
##          AutoEncoder
#####################################

autoencoder_en = ${autoencoder}{
  lang = {
    src = en
    trg = en
  }
  dataset=${opensubtitles_pairwise_en_auto}
}

autoencoder_ja = ${autoencoder}{
  lang = {
    src = ja
    trg = ja
  }
  dataset=${opensubtitles_pairwise_ja_auto}
}


#####################################
##   Adversarial learning
#####################################

adversarial_lang_source {
  loss_weight = 1.0
  ffnn_depth = 2
  model_type = LangAdversarial
  attr_name = {
     src: source_lang_adv_input
     trg: source_lang_adv_output
  }
}
adversarial_lang_target {
  loss_weight = 1.0
  ffnn_depth = 2
  model_type = LangAdversarial
  attr_name = {
     src: target_lang_adv_input
     trg: target_lang_adv_output
  }
}

adversarial_task {
  loss_weight = 1.0
  ffnn_depth = 2
  model_type = TaskAdversarial
}


